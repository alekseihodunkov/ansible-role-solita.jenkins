---
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

# Force Jenkins restart, if one is pending after e.g. plugin installation.
- meta: flush_handlers

# Stolen from geerlingguy.jenkins.
- name: Wait for Jenkins to start up before proceeding.
  shell: "curl -D - --silent http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
  args:
    warn: no
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Create an SSH key for the Unix user
  user: name={{ ansible_user_id }} generate_ssh_key=yes

- name: copy job-dsl-config.xml to destination
  become: yes
  become_user: jenkins
  copy: src={{ role_path }}/files/job-dsl-config.xml dest=/var/lib/jenkins/job-dsl-config.xml

- name: Create the job-dsl job
  shell: java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/ create-job job-dsl < '/var/lib/jenkins/job-dsl-config.xml'
  args:
    creates: /var/lib/jenkins/jobs/job-dsl/config.xml
  register: create_job_dsl_job

- name: Update the job-dsl job configuration
  become: yes
  become_user: jenkins
  copy:
    src: job-dsl-config.xml
    dest: /var/lib/jenkins/jobs/job-dsl/config.xml
  register: update_job_dsl_job

- name: Reload the job-dsl job
  command: java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/ reload-job job-dsl
  when: update_job_dsl_job | changed

- include: jobs.yml
  tags: solita_jenkins_jobs

- include: security.yml
  tags: solita_jenkins_security